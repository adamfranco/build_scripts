#!/bin/sh

##############################################################################
# This script will build a MiddMedia package and put it a ~/Releases directory.
#
# Harmoni and polyphony packages will be built as well and will be copied in to 
# the appropriate places in the MiddMedia package.
#
# 3rd party libraries will also be downloaded from the git repository server
# and copied into the appropriate places.
##############################################################################

middmediaRepo=/home/afranco/repositories/public/middmedia.git

destDir=~/Releases
libraryUrl="http://slug.middlebury.edu/git/libraries"

usage="Usage: `basename $0` -H <harmoni tag> -P <polyphony tag> -M <middmedia tag> \n\t[-h <harmoni repo>] [-p polyphony repo>] [-m <middmedia repo>] [-d <dest dir>]"

# Set up options
while getopts ":H:P:M:h:p:m:d:" options; do
	case $options in
	H ) harmoniTag=$OPTARG;;
	P ) polyphonyTag=$OPTARG;;
	M ) middmediaTag=$OPTARG;;
	h ) harmoniRepo=$OPTARG;;
	p ) polyphonyRepo=$OPTARG;;
	m ) middmediaRepo=$OPTARG;;
	d ) destDir=$OPTARG;;
	\? ) echo -e $usage
		exit 1;;
	* ) echo -e $usage
		exit 1;;
	
	esac
done

# Test for Harmoni Tag
if [  ! -n "$harmoniTag" ]
then
	echo -e $usage
	exit 1
fi

# Test for Polyphony Tag
if [  ! -n "$polyphonyTag" ]
then
	echo -e $usage
	exit 1
fi

# Test for MiddMedia Tag
if [  ! -n "$middmediaTag" ]
then
	echo -e $usage
	exit 1
fi

# Ensure that we have an absolute path
destDir=$(readlink -f $destDir)

if [ ! -e "$destDir" ]
then
	echo "$destDir does not exist."
	echo 
	echo -e $usage
	exit 2
fi

#########################
# Harmoni
#########################
if [ -n "$harmoniRepo" ]
then
	build_Harmoni -H $harmoniTag -h $harmoniRepo -d $destDir
else
	build_Harmoni -H $harmoniTag -d $destDir
fi

#########################
# Polyphony
#########################
if [ -n "$polyphonyRepo" ]
then
	build_Polyphony -P $polyphonyTag -p $polyphonyRepo -d $destDir
else
	build_Polyphony -P $polyphonyTag -d $destDir
fi

#########################
# MiddMedia
#########################
# Clean up any previous middmedia builds
if [ -e "$destDir/${middmediaTag}.zip" ]
then
	rm $destDir/$middmediaTag}.zip
fi
if [ -e "$destDir/${middmediaTag}" ]
then
	rm -rf $destDir/${middmediaTag}
fi

# Export middmedia 
cd $middmediaRepo
git-archive --format=zip --prefix=${middmediaTag}/ $middmediaTag > $destDir/${middmediaTag}.zip
cd $destDir
unzip -q ${middmediaTag}.zip
rm ${middmediaTag}.zip

# Add the Scriptaculous libraries
cd $destDir/${middmediaTag}/javascript
wget -q ${libraryUrl}/scriptaculous-js.zip
unzip -q scriptaculous-js.zip
rm scriptaculous-js.zip
cd $destDir

# Add the JPGraph libraries
cd $destDir/${middmediaTag}/main
wget -q ${libraryUrl}/jpgraph.zip
unzip -q jpgraph.zip
rm jpgraph.zip
cd $destDir

# Add the DOMIT libraries
cd $destDir/${middmediaTag}/main
wget -q ${libraryUrl}/domit.zip
unzip -q domit.zip
rm domit.zip
cd $destDir

# Add the PHP JPEG Metadat Toolkit libraries
cd $destDir/${middmediaTag}/main
wget -q ${libraryUrl}/PHP_JPEG_Metadata_Toolkit_1.11.zip
unzip -q PHP_JPEG_Metadata_Toolkit_1.11.zip
rm PHP_JPEG_Metadata_Toolkit_1.11.zip
cd $destDir

# Add Polyphony and Harmoni to middmedia
cp -R $destDir/${harmoniTag} $destDir/${middmediaTag}/main/harmoni
cp -R $destDir/${polyphonyTag} $destDir/${middmediaTag}/main/polyphony

# Re-Compress MiddMedia with the libraries added.
cd $destDir
zip -qr ${middmediaTag}.zip ${middmediaTag}
